'''
Copyright (c) 2017, Jairus Martin.

Distributed under the terms of the MIT License.

The full license is in the file COPYING.txt, distributed with this software.

Created on May 20, 2017

@author: jrm
'''
import time
from enamlnative.widgets.api import *
from datetime import datetime

enamldef HBox(LinearLayout):
  orientation = "horizontal"

enamldef VBox(LinearLayout):
  orientation = "vertical"

enamldef Card(CardView):
  padding = (20, 20, 20, 20)
  margins = (0, 10, 0, 10)
  content_padding = (10,10,10,10)
  #card_background_color = '#FF0000'

enamldef CardTitle(TextView):
  font_family = "sans-serif-condensed-light"
  text_size = 18

enamldef ContentView(DrawerLayout):
  #opened = True # Or swipe to open
  side = 'left'
  ScrollView:
    layout_width = 'match_parent'
    layout_height = 'match_parent'
    background_color = '#EEEEEE'
    LinearLayout:
      orientation = "vertical"
      padding = (10,10,10,10)
      Card:
        VBox:
          CardTitle:
            text = "TextView"
          TextView:
            text = "Error"
            font_style = "italic"
            text_size = 16
            text_color = "#FF0000"
          TextView:
            text = "This takes up three lines"
            lines = 3
          TextView:
            text = """This gets trunicated. Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of "de Finibus Bonorum et Malorum" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, "Lorem ipsum dolor sit amet..", comes from a line in section 1.10.32."""
            max_lines = 5

      Card:
        VBox:
          CardTitle:
            text = "Buttons"
          Button:
            text = "PushButton"
            clicked:: tv1.count += 1
          TextView: tv1:
            attr count = 0
            text << "Clicked {}".format(count)
      Card:
        VBox:
          CardTitle:
            text = "Checkboxes"
          CheckBox: cb1:
            text = "CheckBox"
            checked = True
          TextView:
            text << "Checkbox state: {}".format(cb1.checked)
      Card:
        VBox:
          CardTitle:
            text = "Radio buttons"
          RadioGroup: rg1:
            checked = rb1
            RadioButton: rb1:
              text = "A"
            RadioButton: rb2:
              text = "B"
            RadioButton: rb3:
              text = "C"
          TextView:
            text << "Radio group state: {}".format(rg1.checked.text if rg1.checked else "Unchecked")
      Card:
        VBox:
          CardTitle:
            text = "Progressbar"
          ProgressBar:
            indeterminate = True # Ignored if style doesn't support it

      Card:
        VBox:
          CardTitle:
            text = "Timer"
          Chronometer:
            pass
      Card:
        VBox:
          CardTitle:
            text = "Spinner"
          Spinner:
            items = range(10)
      Card:
        VBox:
          CardTitle:
            text = "EditText"
          TextView:
            text << "You typed: {}".format(et.text)
          EditText: et:
            text = ""
      Card:
        VBox:
          CardTitle:
            text = "Time Picker"
          TimePicker: tp1:
            hour = 6
            minute = 30
          TextView:
            text << "Time selected: {hour}:{minute}".format(hour=tp1.hour,minute=tp1.minute)
      Card:
        VBox:
          CardTitle:
            text = "Date Picker"
          DatePicker: dp1:
            attr today = datetime.now()
            year = today.year
            month = today.month
            day = today.day
          TextView:
            text << "Date selected: {month}/{day}/{year}".format(month=dp1.month,day=dp1.day,year=dp1.year)
  LinearLayout:
    layout_gravity = 'left'
    TextView:
      text = "Button"

    #CalendarView:
    #  date = long(time.time()*1000)
